name: tests

on:
  push:
    branches:
      - 'main'
      - '*.*.*'
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.mdx'
  pull_request:
    types: [opened, synchronize, reopened, labeled]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.mdx'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ragflow_tests:
    name: ragflow_tests
    runs-on: ubuntu-latest # Use GitHub-hosted Ubuntu runner
    steps:
      - name: Show PR labels
        run: |
          echo "Workflow triggered by ${{ github.event_name }}"
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            echo "PR labels: ${{ join(github.event.pull_request.labels.*.name, ', ') }}"
          fi

      - name: Ensure workspace ownership
        run: echo "chown -R $USER $GITHUB_WORKSPACE" && sudo chown -R $USER $GITHUB_WORKSPACE

      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup NLTK Data and Other Files
        run: |
          RUNNER_WORKSPACE_PREFIX=${RUNNER_WORKSPACE_PREFIX:-$HOME}
          # Check and copy required directories and files
          if [ -d "${RUNNER_WORKSPACE_PREFIX}/huggingface.co" ]; then
            cp -r ${RUNNER_WORKSPACE_PREFIX}/huggingface.co .
          else
            echo "Warning: huggingface.co directory does not exist."
          fi

          if [ -d "${RUNNER_WORKSPACE_PREFIX}/nltk_data" ]; then
            cp -r ${RUNNER_WORKSPACE_PREFIX}/nltk_data . # Copy to current directory
          else
            echo "Warning: nltk_data directory does not exist."
          fi

          if ls ${RUNNER_WORKSPACE_PREFIX}/libssl*.deb 1> /dev/null 2>&1; then
            cp ${RUNNER_WORKSPACE_PREFIX}/libssl*.deb .
          else
            echo "Warning: libssl*.deb files do not exist."
          fi

      - name: Build ragflow:dev-slim (arm64)
        run: |
          sudo docker pull ubuntu:24.04
          sudo docker build --build-arg ARCH=arm64 -f Dockerfile.slim -t ghcr.io/${{ github.repository_owner }}/ragflow:latest .

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push ragflow:dev-slim to ghcr.io (latest)
        run: |
          sudo docker push ghcr.io/${{ github.repository_owner }}/ragflow:latest

      - name: Start ragflow:dev-slim
        run: |
          sudo docker compose -f docker/docker-compose.yml up -d

      - name: Stop ragflow:dev-slim
        if: always() # always run this step even if previous steps failed
        run: |
          sudo docker compose -f docker/docker-compose.yml down -v
